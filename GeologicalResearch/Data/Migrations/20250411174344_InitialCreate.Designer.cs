// <auto-generated />
using System;
using GeologicalResearch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeologicalResearch.Data.Migrations
{
    [DbContext(typeof(GRDataContext))]
    [Migration("20250411174344_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("GeologicalResearch.Models.Brigade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BrigadeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Brigades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrigadeName = "Бригада №1"
                        },
                        new
                        {
                            Id = 2,
                            BrigadeName = "Бригада №2"
                        },
                        new
                        {
                            Id = 3,
                            BrigadeName = "Бригада №3"
                        });
                });

            modelBuilder.Entity("GeologicalResearch.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrigadeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestNote")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BrigadeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("GeologicalResearch.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Заявка открыта"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Заявка в работе"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Заявка закрыта"
                        });
                });

            modelBuilder.Entity("GeologicalResearch.Models.Request", b =>
                {
                    b.HasOne("GeologicalResearch.Models.Brigade", "Brigade")
                        .WithMany()
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeologicalResearch.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brigade");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
